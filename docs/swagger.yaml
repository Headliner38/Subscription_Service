basePath: /api/v1
definitions:
  handler.CreateSubscriptionRequest:
    properties:
      end_date:
        example: 12-2024
        type: string
      price:
        example: 999
        type: integer
      service_name:
        example: Netflix
        type: string
      start_date:
        example: 01-2024
        type: string
      user_id:
        example: user123
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
  handler.ErrorResponse:
    properties:
      error:
        example: Invalid request
        type: string
    type: object
  handler.TotalCostResponse:
    properties:
      end_date:
        example: 12-2024
        type: string
      service_name:
        example: Netflix
        type: string
      start_date:
        example: 01-2024
        type: string
      total_cost:
        example: 2997
        type: integer
      user_id:
        example: user123
        type: string
    type: object
  handler.UpdateSubscriptionRequest:
    properties:
      end_date:
        example: 12-2024
        type: string
      price:
        example: 999
        type: integer
      service_name:
        example: Netflix
        type: string
      start_date:
        example: 01-2024
        type: string
      user_id:
        example: user123
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
  model.Subscription:
    description: Модель подписки пользователя
    properties:
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      end_date:
        example: "2024-12-31T00:00:00Z"
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      price:
        example: 999
        type: integer
      service_name:
        example: Netflix
        type: string
      start_date:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      user_id:
        example: user123
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: REST API для управления подписками пользователей
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Subscription Service API
  version: "1.0"
paths:
  /subscriptions:
    get:
      consumes:
      - application/json
      description: Получает список всех подписок
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Subscription'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Список подписок
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Создаёт новую подписку для пользователя
      parameters:
      - description: Данные подписки
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/handler.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Создать подписку
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет подписку по ID
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Удалить подписку
      tags:
      - subscriptions
    get:
      consumes:
      - application/json
      description: Получает подписку по ID
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Subscription'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Получить подписку
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Обновляет существующую подписку
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: string
      - description: Новые данные подписки
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Обновить подписку
      tags:
      - subscriptions
  /subscriptions/total:
    get:
      consumes:
      - application/json
      description: Подсчитывает общую стоимость подписок с фильтрацией
      parameters:
      - description: ID пользователя
        in: query
        name: user_id
        type: string
      - description: Название сервиса
        in: query
        name: service_name
        type: string
      - description: Начальная дата (MM-YYYY)
        in: query
        name: start_date
        type: string
      - description: Конечная дата (MM-YYYY)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TotalCostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Подсчитать общую стоимость
      tags:
      - subscriptions
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
